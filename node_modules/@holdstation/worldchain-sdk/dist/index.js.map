{"version":3,"sources":["../src/abi/index.ts","../src/abi/dex.ts","../src/abi/erc20.ts","../src/abi/multicall3.ts","../src/abi/uniswap-quoter-v2.ts","../src/abi/uniswap-router-v2.ts","../src/abi/uniswap-router-v3.ts","../src/abi/view-quoter-v3.ts","../src/logger.ts","../src/config.ts","../src/storage/token.storage.indexdb.ts","../src/storage/transaction.storage.ts","../src/storage/transaction.types.ts","../src/storage/token.storage.inmemory.ts","../src/storage/transaction.inmemory.ts","../src/token/token-provider.ts","../src/history/manager.ts","../src/send/send.ts","../src/swap/fee.ts","../src/swap/swap.ts","../src/swap/hold-so.ts","../src/swap/partner.ts","../src/swap/swap-helper.ts","../src/swap/zero-x.ts"],"names":["abi_exports","__export","DEX_ABI","ERC20_ABI","MULTICALL3_JSONABI","uniswapQuoterV2ABI","uniswapRouterV2ABI","uniswapRouterV3ABI","viewQuoterv3ABI","Logger","level","args","logger","Config","client","multicall3","config","IdbTokenStorage","dbName","openDB","db","token","address","addresses","store","results","IndexedDBTransactionStorageImpl","transaction","transactions","tx","offset","limit","index","cursor","currentOffset","hash","TransactionStatus","InmemoryTokenStorage","inmemoryTokenStorage","InmemoryTransactionStorageImpl","inmemoryTransactionStorage","TRANSFER_TOPIC","TokenProvider","params","tokenAddresses","result","cachedTokens","missingTokens","calls","tokenAddress","dmm","_","data","i","decimals","symbol","name","BigNumber","wallet","options","blockPerRequest","latestBlock","toBlock","fromBlock","chunked","end","tokenList","startBlock","endBlock","log","tokenSet","tokens","balance","wallets","Manager","Mutex","mutex","release","runner","Runner","walletAddress","lastBlockScan","minBlock","resolve","fn","maxRetries","attempts","error","from","to","topicAddress","logs","txsummary","combinedLogs","txs","transfer","Sender","tokenProvider","amount","value","MiniKit","amountIn","deadline","permitTransfer","permitTransferArgsForm","transferDetails","transferDetailsArgsForm","isStableCoin","stableCoins","v","isNativeToken","getFeeDirect","tokenIn","tokenOut","priotizeAddress","getFeeWithAmountIn","fee","getFeeWithAmountOut","amountOut","defaultWorldchainConfig","ROUTER_HOLD_SO","HoldSo","tokenStorage","chainId","url","queryParams","key","response","fromToken","toToken","rawFee","rawSlippage","amountInWei","slippage","feeOut","amountOutMin","rateSwap","minmumReceived","amountOutUsd","partnerCode","PARTNER_CODE_KEY","getStorage","storageObj","e","setPartnerCode","code","storage","getPartnerCode","storedCode","clearPartnerCode","partnerCodeCheckIntervalId","initPartnerCodeCheck","setIntervalSafe","SwapHelper","swapModule","timeout","preferRouters","routersToUse","validModules","router","swapper","startTime","errors","errorMessages","feeReceiver","feeAmountOut","sellAmount","feeToken","feeAmount","partnerData","rawData","payload","feePercent","partnerCodeBigInt","feeBigInt","ZeroX","rateTokenOut"],"mappings":"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","file":"index.js","sourcesContent":["export * from \"./dex\";\nexport * from \"./erc20\";\nexport * from \"./multicall3\";\nexport * from \"./uniswap-quoter-v2\";\nexport * from \"./uniswap-router-v2\";\nexport * from \"./uniswap-router-v3\";\nexport * from \"./view-quoter-v3\";\n","export const DEX_ABI = [\n  {\n    type: \"receive\",\n    stateMutability: \"payable\",\n  },\n  {\n    type: \"function\",\n    name: \"feeReceiver\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n  },\n  {\n    type: \"function\",\n    name: \"fillQuoteEthToToken\",\n    inputs: [\n      {\n        name: \"buyTokenAddress\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"target\",\n        type: \"address\",\n        internalType: \"address payable\",\n      },\n      {\n        name: \"swapCallData\",\n        type: \"bytes\",\n        internalType: \"bytes\",\n      },\n      {\n        name: \"partnerData\",\n        type: \"uint256\",\n        internalType: \"uint256\",\n      },\n      {\n        name: \"partnerFeeReceiver\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n    ],\n    outputs: [],\n    stateMutability: \"payable\",\n  },\n  {\n    type: \"function\",\n    name: \"fillQuoteTokenToEth\",\n    inputs: [\n      {\n        name: \"sellTokenAddress\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"target\",\n        type: \"address\",\n        internalType: \"address payable\",\n      },\n      {\n        name: \"swapCallData\",\n        type: \"bytes\",\n        internalType: \"bytes\",\n      },\n      {\n        name: \"sellAmount\",\n        type: \"uint256\",\n        internalType: \"uint256\",\n      },\n      {\n        name: \"feePercentage\",\n        type: \"uint256\",\n        internalType: \"uint256\",\n      },\n      {\n        name: \"partnerFeeReceiver\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"permit\",\n        type: \"tuple\",\n        internalType: \"struct Permit2\",\n        components: [\n          {\n            name: \"nonce\",\n            type: \"uint256\",\n            internalType: \"uint256\",\n          },\n          {\n            name: \"deadline\",\n            type: \"uint256\",\n            internalType: \"uint256\",\n          },\n          {\n            name: \"signature\",\n            type: \"bytes\",\n            internalType: \"bytes\",\n          },\n        ],\n      },\n    ],\n    outputs: [],\n    stateMutability: \"payable\",\n  },\n  {\n    type: \"function\",\n    name: \"fillQuoteTokenToToken\",\n    inputs: [\n      {\n        name: \"sellTokenAddress\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"buyTokenAddress\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"target\",\n        type: \"address\",\n        internalType: \"address payable\",\n      },\n      {\n        name: \"swapCallData\",\n        type: \"bytes\",\n        internalType: \"bytes\",\n      },\n      {\n        name: \"sellAmount\",\n        type: \"uint256\",\n        internalType: \"uint256\",\n      },\n      {\n        name: \"feeToken\",\n        type: \"uint8\",\n        internalType: \"enum FeeToken\",\n      },\n      {\n        name: \"partnerData\",\n        type: \"uint256\",\n        internalType: \"uint256\",\n      },\n      {\n        name: \"partnerFeeReceiver\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"permit\",\n        type: \"tuple\",\n        internalType: \"struct Permit2\",\n        components: [\n          {\n            name: \"nonce\",\n            type: \"uint256\",\n            internalType: \"uint256\",\n          },\n          {\n            name: \"deadline\",\n            type: \"uint256\",\n            internalType: \"uint256\",\n          },\n          {\n            name: \"signature\",\n            type: \"bytes\",\n            internalType: \"bytes\",\n          },\n        ],\n      },\n    ],\n    outputs: [],\n    stateMutability: \"payable\",\n  },\n  {\n    type: \"function\",\n    name: \"initialize\",\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"_swapTargets\",\n        type: \"address[]\",\n        internalType: \"address[]\",\n      },\n      {\n        name: \"_permit2\",\n        type: \"address\",\n        internalType: \"contract ISignatureTransfer\",\n      },\n    ],\n    outputs: [],\n    stateMutability: \"nonpayable\",\n  },\n  {\n    type: \"function\",\n    name: \"owner\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n  },\n  {\n    type: \"function\",\n    name: \"permit2\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n        internalType: \"contract ISignatureTransfer\",\n      },\n    ],\n    stateMutability: \"view\",\n  },\n  {\n    type: \"function\",\n    name: \"renounceOwnership\",\n    inputs: [],\n    outputs: [],\n    stateMutability: \"nonpayable\",\n  },\n  {\n    type: \"function\",\n    name: \"send\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\",\n        internalType: \"address payable\",\n      },\n    ],\n    outputs: [],\n    stateMutability: \"payable\",\n  },\n  {\n    type: \"function\",\n    name: \"swapTargets\",\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n        internalType: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    inputs: [\n      {\n        name: \"permitTransferFrom\",\n        type: \"tuple\",\n        internalType: \"struct ISignatureTransfer.PermitTransferFrom\",\n        components: [\n          {\n            name: \"permitted\",\n            type: \"tuple\",\n            internalType: \"struct ISignatureTransfer.TokenPermissions\",\n            components: [\n              {\n                name: \"token\",\n                type: \"address\",\n                internalType: \"address\",\n              },\n              {\n                name: \"amount\",\n                type: \"uint256\",\n                internalType: \"uint256\",\n              },\n            ],\n          },\n          {\n            name: \"nonce\",\n            type: \"uint256\",\n            internalType: \"uint256\",\n          },\n          {\n            name: \"deadline\",\n            type: \"uint256\",\n            internalType: \"uint256\",\n          },\n        ],\n      },\n      {\n        name: \"transferDetails\",\n        type: \"tuple\",\n        internalType: \"struct ISignatureTransfer.SignatureTransferDetails\",\n        components: [\n          {\n            name: \"to\",\n            type: \"address\",\n            internalType: \"address\",\n          },\n          {\n            name: \"requestedAmount\",\n            type: \"uint256\",\n            internalType: \"uint256\",\n          },\n        ],\n      },\n      {\n        name: \"receiver\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"signature\",\n        type: \"bytes\",\n        internalType: \"bytes\",\n      },\n    ],\n    outputs: [],\n    stateMutability: \"nonpayable\",\n  },\n  {\n    type: \"function\",\n    name: \"transferOwnership\",\n    inputs: [\n      {\n        name: \"newOwner\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n    ],\n    outputs: [],\n    stateMutability: \"nonpayable\",\n  },\n  {\n    type: \"function\",\n    name: \"updateFeeRecipient\",\n    inputs: [\n      {\n        name: \"feeRecipient\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n    ],\n    outputs: [],\n    stateMutability: \"nonpayable\",\n  },\n  {\n    type: \"function\",\n    name: \"updateSwapTargets\",\n    inputs: [\n      {\n        name: \"target\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"add\",\n        type: \"bool\",\n        internalType: \"bool\",\n      },\n    ],\n    outputs: [],\n    stateMutability: \"nonpayable\",\n  },\n  {\n    type: \"function\",\n    name: \"whitelistFeeReceiver\",\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n        internalType: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n  },\n  {\n    type: \"function\",\n    name: \"withdrawEth\",\n    inputs: [\n      {\n        name: \"to\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n        internalType: \"uint256\",\n      },\n    ],\n    outputs: [],\n    stateMutability: \"nonpayable\",\n  },\n  {\n    type: \"function\",\n    name: \"withdrawToken\",\n    inputs: [\n      {\n        name: \"token\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"to\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n        internalType: \"uint256\",\n      },\n    ],\n    outputs: [],\n    stateMutability: \"nonpayable\",\n  },\n  {\n    type: \"event\",\n    name: \"EthWithdrawn\",\n    inputs: [\n      {\n        name: \"target\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"FeeDistributed\",\n    inputs: [\n      {\n        name: \"token\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"recipient\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"FillQuoteEthToToken\",\n    inputs: [\n      {\n        name: \"buyToken\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"user\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"target\",\n        type: \"address\",\n        indexed: false,\n        internalType: \"address\",\n      },\n      {\n        name: \"amountSold\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n      {\n        name: \"amountBought\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n      {\n        name: \"partnerData\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"FillQuoteTokenToEth\",\n    inputs: [\n      {\n        name: \"sellToken\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"user\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"target\",\n        type: \"address\",\n        indexed: false,\n        internalType: \"address\",\n      },\n      {\n        name: \"amountSold\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n      {\n        name: \"amountBought\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n      {\n        name: \"partnerData\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"FillQuoteTokenToToken\",\n    inputs: [\n      {\n        name: \"sellToken\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"buyToken\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"user\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"target\",\n        type: \"address\",\n        indexed: false,\n        internalType: \"address\",\n      },\n      {\n        name: \"amountSold\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n      {\n        name: \"amountBought\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n      {\n        name: \"feeToken\",\n        type: \"uint8\",\n        indexed: false,\n        internalType: \"enum FeeToken\",\n      },\n      {\n        name: \"partnerData\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"Initialized\",\n    inputs: [\n      {\n        name: \"version\",\n        type: \"uint64\",\n        indexed: false,\n        internalType: \"uint64\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"OwnershipTransferred\",\n    inputs: [\n      {\n        name: \"previousOwner\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"newOwner\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"Sent\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n      {\n        name: \"recipient\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"SwapTargetAdded\",\n    inputs: [\n      {\n        name: \"target\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"SwapTargetRemoved\",\n    inputs: [\n      {\n        name: \"target\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"TokenSent\",\n    inputs: [\n      {\n        name: \"receiver\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"sender\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"token\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"event\",\n    name: \"TokenWithdrawn\",\n    inputs: [\n      {\n        name: \"token\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"target\",\n        type: \"address\",\n        indexed: true,\n        internalType: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n        indexed: false,\n        internalType: \"uint256\",\n      },\n    ],\n    anonymous: false,\n  },\n  {\n    type: \"error\",\n    name: \"InvalidInitialization\",\n    inputs: [],\n  },\n  {\n    type: \"error\",\n    name: \"InvalidReceiver\",\n    inputs: [],\n  },\n  {\n    type: \"error\",\n    name: \"InvalidToAddress\",\n    inputs: [],\n  },\n  {\n    type: \"error\",\n    name: \"NotInitializing\",\n    inputs: [],\n  },\n  {\n    type: \"error\",\n    name: \"OwnableInvalidOwner\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n    ],\n  },\n  {\n    type: \"error\",\n    name: \"OwnableUnauthorizedAccount\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\",\n        internalType: \"address\",\n      },\n    ],\n  },\n  {\n    type: \"error\",\n    name: \"ReentrancyGuardReentrantCall\",\n    inputs: [],\n  },\n];\n","export const ERC20_ABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n];\n","export const MULTICALL3_JSONABI = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"aggregate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"returnData\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"allowFailure\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Call3[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"aggregate3\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"success\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"returnData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"allowFailure\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Call3Value[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"aggregate3Value\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"success\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"returnData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"blockAndAggregate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"blockHash\",\n        type: \"bytes32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"success\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"returnData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBasefee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"basefee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getBlockHash\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"blockHash\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBlockNumber\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getChainId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"chainid\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockCoinbase\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"coinbase\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockDifficulty\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"difficulty\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockGasLimit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"gaslimit\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockTimestamp\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"timestamp\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"addr\",\n        type: \"address\",\n      },\n    ],\n    name: \"getEthBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getLastBlockHash\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"blockHash\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"requireSuccess\",\n        type: \"bool\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"tryAggregate\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"success\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"returnData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"requireSuccess\",\n        type: \"bool\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"tryBlockAndAggregate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"blockHash\",\n        type: \"bytes32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"success\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"returnData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall3.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n","export const uniswapQuoterV2ABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_factory\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_WETH9\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"WETH9\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"path\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quoteExactInput\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint160[]\",\n        name: \"sqrtPriceX96AfterList\",\n        type: \"uint160[]\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"initializedTicksCrossedList\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"gasEstimate\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"tokenIn\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"tokenOut\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountIn\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"fee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct IQuoterV2.QuoteExactInputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"quoteExactInputSingle\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint160\",\n        name: \"sqrtPriceX96After\",\n        type: \"uint160\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"initializedTicksCrossed\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"gasEstimate\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"path\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quoteExactOutput\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint160[]\",\n        name: \"sqrtPriceX96AfterList\",\n        type: \"uint160[]\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"initializedTicksCrossedList\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"gasEstimate\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"tokenIn\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"tokenOut\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"fee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct IQuoterV2.QuoteExactOutputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"quoteExactOutputSingle\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint160\",\n        name: \"sqrtPriceX96After\",\n        type: \"uint160\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"initializedTicksCrossed\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"gasEstimate\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"amount0Delta\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"amount1Delta\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"path\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"uniswapV3SwapCallback\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","export const uniswapRouterV2ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_factory\", type: \"address\" },\n      { internalType: \"address\", name: \"_WETH\", type: \"address\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"WETH\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"tokenA\", type: \"address\" },\n      { internalType: \"address\", name: \"tokenB\", type: \"address\" },\n      {\n        internalType: \"uint256\",\n        name: \"amountADesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBDesired\",\n        type: \"uint256\",\n      },\n      { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"addLiquidity\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenDesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"addLiquidityETH\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveOut\", type: \"uint256\" },\n    ],\n    name: \"getAmountIn\",\n    outputs: [{ internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveOut\", type: \"uint256\" },\n    ],\n    name: \"getAmountOut\",\n    outputs: [{ internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n    ],\n    name: \"getAmountsIn\",\n    outputs: [{ internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n    ],\n    name: \"getAmountsOut\",\n    outputs: [{ internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveA\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveB\", type: \"uint256\" },\n    ],\n    name: \"quote\",\n    outputs: [{ internalType: \"uint256\", name: \"amountB\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"tokenA\", type: \"address\" },\n      { internalType: \"address\", name: \"tokenB\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"removeLiquidity\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"removeLiquidityETH\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"removeLiquidityETHSupportingFeeOnTransferTokens\",\n    outputs: [{ internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"bool\", name: \"approveMax\", type: \"bool\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"removeLiquidityETHWithPermit\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"bool\", name: \"approveMax\", type: \"bool\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\n    outputs: [{ internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"tokenA\", type: \"address\" },\n      { internalType: \"address\", name: \"tokenB\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"bool\", name: \"approveMax\", type: \"bool\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"removeLiquidityWithPermit\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapETHForExactTokens\",\n    outputs: [{ internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactETHForTokens\",\n    outputs: [{ internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactETHForTokensSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactTokensForETH\",\n    outputs: [{ internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactTokensForETHSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactTokensForTokens\",\n    outputs: [{ internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountInMax\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapTokensForExactETH\",\n    outputs: [{ internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountInMax\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapTokensForExactTokens\",\n    outputs: [{ internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { stateMutability: \"payable\", type: \"receive\" },\n];\n","export const uniswapRouterV3ABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_factoryV2\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"factoryV3\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_positionManager\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_WETH9\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"WETH9\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"approveMax\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"approveMaxMinusOne\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"approveZeroThenMax\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"approveZeroThenMaxMinusOne\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"callPositionManager\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"result\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"paths\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"uint128[]\",\n        name: \"amounts\",\n        type: \"uint128[]\",\n      },\n      {\n        internalType: \"uint24\",\n        name: \"maximumTickDivergence\",\n        type: \"uint24\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"secondsAgo\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"checkOracleSlippage\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"path\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint24\",\n        name: \"maximumTickDivergence\",\n        type: \"uint24\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"secondsAgo\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"checkOracleSlippage\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes\",\n            name: \"path\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountIn\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactInputParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactInput\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"tokenIn\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"tokenOut\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"fee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountIn\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactInputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactInputSingle\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes\",\n            name: \"path\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOut\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountInMaximum\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactOutputParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactOutput\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"tokenIn\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"tokenOut\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"fee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountOut\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountInMaximum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactOutputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactOutputSingle\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factoryV2\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApprovalType\",\n    outputs: [\n      {\n        internalType: \"enum IApproveAndCall.ApprovalType\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token0\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"token1\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount0Min\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount1Min\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct IApproveAndCall.IncreaseLiquidityParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"increaseLiquidity\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"result\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token0\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"token1\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint24\",\n            name: \"fee\",\n            type: \"uint24\",\n          },\n          {\n            internalType: \"int24\",\n            name: \"tickLower\",\n            type: \"int24\",\n          },\n          {\n            internalType: \"int24\",\n            name: \"tickUpper\",\n            type: \"int24\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount0Min\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount1Min\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IApproveAndCall.MintParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"result\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"previousBlockhash\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"positionManager\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"pull\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"refundETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"selfPermit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"selfPermitAllowed\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"selfPermitAllowedIfNecessary\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"selfPermitIfNecessary\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"swapExactTokensForTokens\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountInMax\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"swapTokensForExactTokens\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountMinimum\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"sweepToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountMinimum\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"sweepToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountMinimum\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"feeBips\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"feeRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"sweepTokenWithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountMinimum\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"feeBips\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"feeRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"sweepTokenWithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"amount0Delta\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"int256\",\n        name: \"amount1Delta\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"uniswapV3SwapCallback\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountMinimum\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"unwrapWETH9\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountMinimum\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"feeBips\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"feeRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"unwrapWETH9WithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountMinimum\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"feeBips\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"feeRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"unwrapWETH9WithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"wrapETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n","export const viewQuoterv3ABI = [\n  {\n    inputs: [{ internalType: \"address\", name: \"_factory\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n    ],\n    name: \"quoteExactInput\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"uint160[]\", name: \"sqrtPriceX96AfterList\", type: \"uint160[]\" },\n      { internalType: \"uint32[]\", name: \"initializedTicksCrossedList\", type: \"uint32[]\" },\n      { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\n          { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          { internalType: \"uint160\", name: \"sqrtPriceLimitX96\", type: \"uint160\" },\n        ],\n        internalType: \"struct IQuoter.QuoteExactInputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"quoteExactInputSingle\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountReceived\", type: \"uint256\" },\n      { internalType: \"uint160\", name: \"sqrtPriceX96After\", type: \"uint160\" },\n      { internalType: \"uint32\", name: \"initializedTicksCrossed\", type: \"uint32\" },\n      { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\n          { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n          { internalType: \"address\", name: \"pool\", type: \"address\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          { internalType: \"uint160\", name: \"sqrtPriceLimitX96\", type: \"uint160\" },\n        ],\n        internalType: \"struct IQuoter.QuoteExactInputSingleWithPoolParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"quoteExactInputSingleWithPool\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountReceived\", type: \"uint256\" },\n      { internalType: \"uint160\", name: \"sqrtPriceX96After\", type: \"uint160\" },\n      { internalType: \"uint32\", name: \"initializedTicksCrossed\", type: \"uint32\" },\n      { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n    ],\n    name: \"quoteExactOutput\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint160[]\", name: \"sqrtPriceX96AfterList\", type: \"uint160[]\" },\n      { internalType: \"uint32[]\", name: \"initializedTicksCrossedList\", type: \"uint32[]\" },\n      { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\n          { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          { internalType: \"uint160\", name: \"sqrtPriceLimitX96\", type: \"uint160\" },\n        ],\n        internalType: \"struct IQuoter.QuoteExactOutputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"quoteExactOutputSingle\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint160\", name: \"sqrtPriceX96After\", type: \"uint160\" },\n      { internalType: \"uint32\", name: \"initializedTicksCrossed\", type: \"uint32\" },\n      { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\n          { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          { internalType: \"address\", name: \"pool\", type: \"address\" },\n          { internalType: \"uint160\", name: \"sqrtPriceLimitX96\", type: \"uint160\" },\n        ],\n        internalType: \"struct IQuoter.QuoteExactOutputSingleWithPoolParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"quoteExactOutputSingleWithPool\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint160\", name: \"sqrtPriceX96After\", type: \"uint160\" },\n      { internalType: \"uint32\", name: \"initializedTicksCrossed\", type: \"uint32\" },\n      { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* eslint-disable no-undef */\nenum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  LOG = 4,\n  TRACE = 5,\n  NONE = 6,\n}\n\nclass Logger {\n  private logLevel: LogLevel = LogLevel.INFO;\n\n  private prefix() {\n    return \"[HOLDSTATION-CORE]\";\n  }\n\n  setLogLevel(level: LogLevel) {\n    this.logLevel = level;\n  }\n\n  debug(...args: any[]) {\n    if (this.logLevel > LogLevel.DEBUG) {\n      return;\n    }\n\n    console.debug(this.prefix(), ...args);\n  }\n\n  info(...args: any[]) {\n    if (this.logLevel > LogLevel.INFO) {\n      return;\n    }\n\n    console.info(this.prefix(), ...args);\n  }\n\n  warn(...args: any[]) {\n    if (this.logLevel > LogLevel.WARN) {\n      return;\n    }\n    console.warn(this.prefix(), ...args);\n  }\n\n  error(...args: any[]) {\n    if (this.logLevel > LogLevel.ERROR) {\n      return;\n    }\n\n    console.error(this.prefix(), ...args);\n  }\n\n  log(...args: any[]) {\n    if (this.logLevel > LogLevel.LOG) {\n      return;\n    }\n\n    console.log(this.prefix(), ...args);\n  }\n\n  trace(...args: any[]) {\n    if (this.logLevel > LogLevel.TRACE) {\n      return;\n    }\n\n    console.trace(this.prefix(), ...args);\n  }\n}\n\nexport const logger = new Logger();\n","import { Client } from \"./client\";\nimport { logger } from \"./logger\";\nimport { Multicall3 } from \"./multicall\";\n\nclass Config {\n  multicall3Address: string;\n\n  private _client: Client | undefined;\n  private _multicall3: Multicall3 | undefined;\n\n  constructor() {\n    // this.jsonrpc = \"https://worldchain-mainnet.g.alchemy.com/public\";\n    this.multicall3Address = \"0xcA11bde05977b3631167028862bE2a173976CA11\";\n  }\n\n  get client(): Client {\n    if (!this._client) {\n      throw new Error(\"Client is not set\");\n    }\n\n    return this._client;\n  }\n\n  set client(client: Client) {\n    logger.debug(\"Set new client\", client.name());\n\n    this._client = client;\n  }\n\n  get multicall3(): Multicall3 {\n    if (!this._multicall3) {\n      throw new Error(\"Multicall3 is not set\");\n    }\n\n    return this._multicall3;\n  }\n\n  set multicall3(multicall3: Multicall3) {\n    logger.debug(\"Set new multicall3\", multicall3);\n\n    this._multicall3 = multicall3;\n  }\n}\n\nexport const config = new Config();\n","import { DBSchema, IDBPDatabase, openDB } from \"idb\";\nimport { Token, TokenStorage } from \"./token.types\";\n\ninterface TokenDB extends DBSchema {\n  tokens: {\n    key: string; // address\n    value: Token;\n  };\n}\n\nexport class IdbTokenStorage implements TokenStorage {\n  private db: Promise<IDBPDatabase<TokenDB>>;\n\n  constructor(dbName: string = \"TokenDB\") {\n    this.db = openDB<TokenDB>(dbName, 2, {\n      upgrade(db) {\n        if (!db.objectStoreNames.contains(\"tokens\")) {\n          db.createObjectStore(\"tokens\", { keyPath: \"address\" });\n        }\n      },\n    });\n  }\n\n  async save(token: Token): Promise<void> {\n    const db = await this.db;\n    await db.put(\"tokens\", token);\n  }\n\n  async findByAddress(address: string): Promise<Token> {\n    const db = await this.db;\n    const token = await db.get(\"tokens\", address);\n\n    if (!token) {\n      throw new Error(`Token not found for address: ${address}`);\n    }\n\n    return token;\n  }\n\n  async find(addresses: string[]): Promise<Token[]> {\n    const db = await this.db;\n    const tx = db.transaction(\"tokens\");\n    const store = tx.objectStore(\"tokens\");\n\n    const results: Token[] = [];\n    for (const address of addresses) {\n      const token = await store.get(address);\n      if (token) {\n        results.push(token);\n      }\n    }\n\n    return results;\n  }\n}\n","import { DBSchema, IDBPDatabase, openDB } from \"idb\";\nimport { Transaction, TransactionStorage } from \"./transaction.types\";\n\ninterface TransactionDB extends DBSchema {\n  transactions: {\n    key: string; // hash\n    value: Transaction;\n    indexes: {\n      block: number;\n    };\n  };\n}\n\nexport class IndexedDBTransactionStorageImpl implements TransactionStorage {\n  private db: Promise<IDBPDatabase<TransactionDB>>;\n\n  constructor(dbName: string = \"TransactionDB\") {\n    this.db = openDB<TransactionDB>(dbName, 2, {\n      upgrade(db) {\n        if (!db.objectStoreNames.contains(\"transactions\")) {\n          const store = db.createObjectStore(\"transactions\", {\n            keyPath: \"hash\",\n          });\n          // Create an index on block number for efficient querying\n          store.createIndex(\"block\", \"block\");\n        }\n      },\n    });\n  }\n\n  async save(transaction: Transaction): Promise<void> {\n    const db = await this.db;\n    await db.put(\"transactions\", transaction);\n  }\n\n  async saveMultiple(transactions: Transaction[]): Promise<void> {\n    const db = await this.db;\n\n    // Start a transaction for the \"transactions\" object store\n    const tx = db.transaction(\"transactions\", \"readwrite\");\n    const store = tx.objectStore(\"transactions\");\n\n    // Add each transaction to the store\n    for (const transaction of transactions) {\n      await store.put(transaction);\n    }\n\n    // Commit the transaction\n    await tx.done;\n  }\n\n  async find(offset: number, limit: number): Promise<Transaction[]> {\n    const db = await this.db;\n    // Use index to get transactions sorted by block in descending order\n    const index = db.transaction(\"transactions\", \"readonly\").objectStore(\"transactions\").index(\"block\");\n\n    // Get cursor to traverse in descending order\n    const transactions: Transaction[] = [];\n    let cursor = await index.openCursor(null, \"prev\");\n\n    // Skip offset\n    let currentOffset = 0;\n    while (cursor && currentOffset < offset) {\n      cursor = await cursor.continue();\n      currentOffset++;\n    }\n\n    // Collect limit items\n    while (cursor && transactions.length < limit) {\n      transactions.push(cursor.value);\n      cursor = await cursor.continue();\n    }\n\n    return transactions;\n  }\n\n  async findByHash(hash: string): Promise<Transaction> {\n    const db = await this.db;\n    const transaction = await db.get(\"transactions\", hash);\n\n    if (!transaction) {\n      throw new Error(`Transaction not found for hash: ${hash}`);\n    }\n\n    return transaction;\n  }\n\n  async findLastBlock(): Promise<number> {\n    const db = await this.db;\n    const index = db.transaction(\"transactions\", \"readonly\").objectStore(\"transactions\").index(\"block\");\n\n    // Get the highest block using the index\n    const cursor = await index.openCursor(null, \"prev\");\n\n    // If no transactions exist, return 0\n    if (!cursor) {\n      return 0;\n    }\n\n    // Return the highest block number\n    return cursor.value.block;\n  }\n\n  async findMinBlock(): Promise<number> {\n    const db = await this.db;\n    const index = db.transaction(\"transactions\", \"readonly\").objectStore(\"transactions\").index(\"block\");\n\n    // Get the lowest block using the index\n    const cursor = await index.openCursor(null, \"next\");\n\n    // If no transactions exist, return 0\n    if (!cursor) {\n      return 0;\n    }\n\n    // Return the lowest block number\n    return cursor.value.block;\n  }\n}\n","export enum TransactionStatus {\n  NotDefined = 0,\n  Fail = 1,\n  Success = 2,\n}\n\ntype ExtractedTransaction = {\n  // Main fields extracted from the evm transaction\n\n  hash: string; // Primary key\n  to: string;\n  block: number;\n  success: TransactionStatus;\n};\n\ntype Transfer = {\n  tokenAddress: string;\n  amount: string;\n  from: string;\n  to: string;\n};\n\ntype CalculatedTransactionField = {\n  // Calculated fields\n\n  date?: Date;\n  method: string;\n  protocol: string;\n\n  transfers: Transfer[];\n};\n\nexport type Transaction = ExtractedTransaction & CalculatedTransactionField;\n\nexport interface TransactionStorage {\n  save(transaction: Transaction): Promise<void>;\n  find(offset: number, limit: number): Promise<Transaction[]>;\n  findByHash(hash: string): Promise<Transaction>;\n  findLastBlock(): Promise<number>;\n  findMinBlock(): Promise<number>;\n\n  saveMultiple(transactions: Transaction[]): Promise<void>;\n}\n","import { Token, TokenStorage } from \"./token.types\";\n\nclass InmemoryTokenStorage implements TokenStorage {\n  private store: { [address: string]: Token } = {};\n\n  async save(token: Token): Promise<void> {\n    this.store[token.address] = token;\n  }\n\n  async findByAddress(address: string): Promise<Token> {\n    const token = this.store[address];\n    if (!token) {\n      throw new Error(`Token not found for address: ${address}`);\n    }\n    return token;\n  }\n\n  async find(addresses: string[]): Promise<Token[]> {\n    return addresses.map((address) => this.store[address]).filter((token): token is Token => !!token);\n  }\n}\n\nexport const inmemoryTokenStorage = new InmemoryTokenStorage();\n","import { Transaction, TransactionStorage } from \"./transaction.types\";\n\n// TODO: add more methods to find transactions by different criteria\nclass InmemoryTransactionStorageImpl implements TransactionStorage {\n  saveMultiple(transactions: Transaction[]): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n  save(transaction: Transaction): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n  find(offset: number, limit: number): Promise<Transaction[]> {\n    throw new Error(\"Method not implemented.\");\n  }\n  findByHash(hash: string): Promise<Transaction> {\n    throw new Error(\"Method not implemented.\");\n  }\n  findLastBlock(): Promise<number> {\n    throw new Error(\"Method not implemented.\");\n  }\n  findMinBlock(): Promise<number> {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nexport const inmemoryTransactionStorage = new InmemoryTransactionStorageImpl();\n","import { BigNumber } from \"bignumber.js\";\nimport { ERC20_ABI } from \"../abi\";\nimport { Client } from \"../client\";\nimport { config } from \"../config\";\nimport { Aggregate, Multicall3 } from \"../multicall\";\nimport { Token, TokenStorage, inmemoryTokenStorage } from \"../storage\";\n\n// Transfer event topic (keccak256 hash of Transfer(address,address,uint256))\nconst TRANSFER_TOPIC = \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\";\n\ntype BalanceOfWalletTokens = {\n  wallet: string;\n  tokens: string[];\n};\n\ntype BalanceOfTokenWallets = {\n  token: string;\n  wallets: string[];\n};\n\nexport class TokenProvider {\n  private readonly client: Client;\n  private readonly multicall3: Multicall3;\n  private readonly storage: TokenStorage;\n\n  constructor(params?: Partial<{ client: Client; multicall3: Multicall3; storage: TokenStorage }>) {\n    this.storage = params?.storage ?? inmemoryTokenStorage;\n    this.multicall3 = params?.multicall3 ?? config.multicall3;\n    this.client = params?.client ?? config.client;\n  }\n\n  async details(...tokenAddresses: string[]) {\n    const result: Record<string, Token> = {};\n\n    const cachedTokens = await this.storage.find(tokenAddresses);\n    for (const token of cachedTokens) {\n      result[token.address] = token;\n    }\n\n    const missingTokens = tokenAddresses.filter((address) => !result[address]);\n    if (missingTokens.length === 0) {\n      return result;\n    }\n\n    const calls: Aggregate[\"request\"][] = [];\n\n    for (const tokenAddress of missingTokens) {\n      if (!this.client.isValidAddress(tokenAddress)) {\n        throw new Error(`Invalid token address: ${tokenAddress}`);\n      }\n\n      calls.push(\n        {\n          target: tokenAddress,\n          callData: this.client.codec(ERC20_ABI).encodeFunctionData(\"decimals\"),\n        },\n        {\n          target: tokenAddress,\n          callData: this.client.codec(ERC20_ABI).encodeFunctionData(\"symbol\"),\n        },\n        {\n          target: tokenAddress,\n          callData: this.client.codec(ERC20_ABI).encodeFunctionData(\"name\"),\n        },\n      );\n    }\n\n    const dmm = await this.multicall3.aggregate(calls);\n    const [_, data] = dmm;\n\n    for (let i = 0; i < data.length; i += 3) {\n      const tokenAddress = missingTokens[i / 3];\n      const decimals = data[i];\n      const symbol = data[i + 1];\n      const name = data[i + 2];\n\n      result[tokenAddress] = {\n        address: tokenAddress,\n        chainId: this.client.getChainId(),\n        decimals: new BigNumber(decimals).toNumber(),\n        symbol: this.client.codec(ERC20_ABI).decodeFunctionResult(\"symbol\", symbol).toString(),\n        name: this.client.codec(ERC20_ABI).decodeFunctionResult(\"name\", name).toString(),\n      };\n    }\n\n    // save to storage\n    await Promise.all(Object.keys(result).map((tokenAddress) => this.storage.save(result[tokenAddress])));\n\n    return result;\n  }\n\n  async tokenOf(\n    wallet: string,\n    options?: {\n      blockPerRequest: number;\n      toBlock?: number;\n      fromBlock?: number;\n    },\n  ) {\n    const blockPerRequest = options?.blockPerRequest ?? 10_000;\n    const latestBlock = await this.client.getBlockNumber();\n\n    const toBlock = options?.toBlock ?? latestBlock;\n    const fromBlock = options?.fromBlock ?? toBlock - 10 * blockPerRequest;\n\n    const chunked: number[][] = [];\n    for (let i = fromBlock; i <= toBlock; i += blockPerRequest) {\n      const end = Math.min(i + blockPerRequest - 1, toBlock);\n      chunked.push([i, end]);\n    }\n\n    const tokenList = await Promise.all(\n      chunked.map(async ([startBlock, endBlock]) => {\n        const logs = await this.client.getLogs({\n          // topics: [[TRANSFER_TOPIC], [], [ethers.utils.hexZeroPad(wallet, 32)]],\n          topics: [[TRANSFER_TOPIC], [], [wallet]],\n          fromBlock: startBlock,\n          toBlock: endBlock,\n        });\n\n        const parsedLogs = logs.map((log) => log.address);\n\n        return parsedLogs;\n      }),\n    );\n\n    const tokenSet = new Set<string>();\n    for (const tokens of tokenList) {\n      for (const token of tokens) {\n        tokenSet.add(token);\n      }\n    }\n\n    return Array.from(tokenSet);\n  }\n\n  async balanceOf(params: BalanceOfTokenWallets | BalanceOfWalletTokens) {\n    if (\"token\" in params && Array.isArray(params.wallets)) {\n      return this.balanceOfTokenWallets(params);\n    }\n\n    if (\"wallet\" in params && Array.isArray(params.tokens)) {\n      return this.balanceOfWalletTokens(params);\n    }\n\n    throw new Error(\"Invalid parameters for balanceOf\");\n  }\n\n  private async balanceOfWalletTokens({ wallet, tokens }: BalanceOfWalletTokens) {\n    const calls: Aggregate[\"request\"][] = [];\n    for (const token of tokens) {\n      if (!this.client.isValidAddress(token)) {\n        throw new Error(`Invalid token address: ${token}`);\n      }\n\n      calls.push({\n        target: token,\n        callData: this.client.codec(ERC20_ABI).encodeFunctionData(\"balanceOf\", [wallet]),\n      });\n    }\n\n    const [_, data] = await this.multicall3.aggregate(calls);\n\n    const result: Record<string, string> = {};\n\n    for (let i = 0; i < data.length; i++) {\n      const token = tokens[i];\n      const balance = data[i];\n      result[token] = this.client.codec(ERC20_ABI).decodeFunctionResult(\"balanceOf\", balance).toString();\n    }\n\n    return result;\n  }\n\n  private async balanceOfTokenWallets({ token, wallets }: BalanceOfTokenWallets) {\n    const calls: Aggregate[\"request\"][] = [];\n\n    for (const wallet of wallets) {\n      if (!this.client.isValidAddress(wallet)) {\n        throw new Error(`Invalid wallet address: ${wallet}`);\n      }\n\n      calls.push({\n        target: token,\n        callData: this.client.codec(ERC20_ABI).encodeFunctionData(\"balanceOf\", [wallet]),\n      });\n    }\n\n    const [_, data] = await this.multicall3.aggregate(calls);\n\n    const result: Record<string, string> = {};\n    for (let i = 0; i < data.length; i++) {\n      const wallet = wallets[i];\n      const balance = data[i];\n      result[wallet] = this.client.codec(ERC20_ABI).decodeFunctionResult(\"balanceOf\", balance).toString();\n    }\n\n    return result;\n  }\n}\n","import { Mutex } from \"async-mutex\";\nimport { BigNumber } from \"bignumber.js\";\nimport { Client } from \"../client\";\nimport { config } from \"../config\";\nimport { logger } from \"../logger\";\nimport {\n  inmemoryTokenStorage,\n  inmemoryTransactionStorage,\n  Token,\n  TokenStorage,\n  Transaction,\n  TransactionStatus,\n  TransactionStorage,\n} from \"../storage\";\nimport { TokenProvider } from \"../token\";\n\ntype TokenTransfer = {\n  tokenAddress: string;\n  amount: string;\n  from: string;\n  to: string;\n};\n\nexport class Manager {\n  private listeners: Record<string, Runner> = {};\n  private readonly mutex = new Mutex();\n  private readonly client: Client;\n  private readonly tokenProvider: TokenProvider;\n  private readonly tokenStorage: TokenStorage;\n  private readonly transactionStorage: TransactionStorage;\n\n  constructor(\n    options?: Partial<{\n      client: Client;\n      tokenProvider: TokenProvider;\n      storage: Partial<{\n        token: TokenStorage;\n        tx: TransactionStorage;\n      }>;\n    }>,\n  ) {\n    this.client = options?.client ?? config.client;\n\n    this.tokenProvider =\n      options?.tokenProvider ??\n      new TokenProvider({\n        client: this.client,\n        multicall3: config.multicall3,\n        storage: inmemoryTokenStorage,\n      });\n\n    this.tokenStorage = options?.storage?.token ?? inmemoryTokenStorage;\n    this.transactionStorage = options?.storage?.tx ?? inmemoryTransactionStorage;\n  }\n\n  watch = async (address: string, fromBlock: number, toBlock: number) => {\n    const mutex = this.mutex;\n    const release = await mutex.acquire();\n\n    try {\n      if (this.listeners[address.toLowerCase()]) {\n        const runner = this.listeners[address.toLowerCase()];\n        if (runner) {\n          runner.stop();\n        }\n\n        delete this.listeners[address.toLowerCase()];\n      }\n\n      this.listeners[address.toLowerCase()] = new Runner(address, {\n        client: this.client,\n        tokenProvider: this.tokenProvider,\n        storage: {\n          token: this.tokenStorage,\n          tx: this.transactionStorage,\n        },\n      });\n\n      return {\n        start: async () => {\n          const release = await mutex.acquire();\n\n          try {\n            const runner = this.listeners[address.toLowerCase()];\n\n            logger.debug(`Starting runner for ${address}...`);\n            await runner.run(fromBlock, toBlock);\n            logger.debug(`Runner for ${address} successfully started`);\n          } finally {\n            release();\n          }\n        },\n        stop: async () => {\n          const runner = this.listeners[address.toLowerCase()];\n          if (runner) {\n            runner.stop();\n          }\n\n          delete this.listeners[address.toLowerCase()];\n        },\n      };\n    } finally {\n      release();\n    }\n  };\n}\n\nexport class Runner {\n  private lastBlock: number = 0;\n  private minBlock: number = 0;\n  private readonly blockstep = 2_000;\n  private aborted = false;\n\n  // delay between range scan\n  private delay = 1000;\n\n  private readonly client: Client;\n  private readonly tokenStorage: TokenStorage;\n  private readonly transactionStorage: TransactionStorage;\n  private readonly tokenProvider: TokenProvider;\n\n  constructor(\n    private readonly walletAddress: string,\n    options: {\n      client: Client;\n      tokenProvider: TokenProvider;\n      storage: {\n        token: TokenStorage;\n        tx: TransactionStorage;\n      };\n    },\n  ) {\n    this.client = options.client;\n    this.tokenStorage = options.storage.token;\n    this.transactionStorage = options.storage.tx;\n    this.tokenProvider = options.tokenProvider;\n  }\n\n  run = async (fromBlock: number, toBlock: number) => {\n    this.lastBlock = await this.client.getBlockNumber();\n    const lastBlockScan = await this.transactionStorage.findLastBlock();\n    const minBlock = Math.max(lastBlockScan, fromBlock); // get first 100_000 block\n    this.minBlock = minBlock;\n\n    logger.debug(\"Block\", { last: Math.min(toBlock, this.lastBlock), min: this.minBlock });\n\n    // Run in two side\n    // from minBlock to minBlock - 10_000\n    // from lastBlock to latestBlock\n    await this.loop();\n  };\n\n  stop = async () => {\n    this.aborted = true;\n  };\n\n  private async loop() {\n    while (!this.aborted) {\n      if (this.lastBlock < this.minBlock) {\n        logger.debug(`MinBlock ${this.minBlock} is too far from lastBlock ${this.lastBlock}`);\n        return;\n      }\n\n      await this.queryLogs(this.lastBlock - 10_000, this.lastBlock).then(() => {\n        // Update minBlock to avoid duplicated query\n        this.lastBlock = this.lastBlock - 10_000;\n      });\n\n      // Delay to avoid rate limit\n      await new Promise((resolve) => {\n        setTimeout(() => resolve(null), this.delay);\n      });\n    }\n  }\n\n  getMethodId(data: string) {\n    const methodId = data.slice(0, 10);\n    return methodId;\n  }\n\n  private async retry<T>(fn: () => Promise<T>, maxRetries: number): Promise<T> {\n    let attempts = 0;\n    while (attempts < maxRetries) {\n      try {\n        return await fn();\n      } catch (error) {\n        attempts++;\n        logger.error(`Attempt ${attempts} failed:`, error);\n        if (attempts >= maxRetries) {\n          logger.error(`Failed after ${maxRetries} attempts.`);\n          throw error; // Optionally rethrow the error\n        }\n      }\n    }\n    throw new Error(\"Retry logic failed unexpectedly.\"); // Fallback error\n  }\n\n  private async queryLogs(from: number, to: number) {\n    const topicAddress = this.client.hexZeroPad(this.walletAddress, 32).toLowerCase();\n\n    // our rpc allow upto 2000 block\n\n    for (let i = to; i >= from; i -= this.blockstep) {\n      if (this.aborted) {\n        logger.debug(\"Aborted\");\n        break;\n      }\n\n      const logs = await this.retry(\n        () =>\n          Promise.all([\n            // transfer from this address\n            this.client.getLogs({\n              fromBlock: Math.max(i - this.blockstep, from),\n              toBlock: i,\n              topics: [\"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\", [topicAddress]],\n            }),\n\n            // transfer to this address\n            this.client.getLogs({\n              fromBlock: Math.max(i - this.blockstep, from),\n              toBlock: i,\n              topics: [\"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\", null, [topicAddress]],\n            }),\n          ]),\n        3,\n      );\n\n      const txsummary: Record<string, TokenTransfer[]> = {};\n      const combinedLogs = [...logs[0], ...logs[1]];\n      for (const log of combinedLogs) {\n        if (!txsummary[log.transactionHash]) {\n          txsummary[log.transactionHash] = [];\n        }\n\n        let token: Token;\n        try {\n          token = await this.tokenStorage.findByAddress(log.address);\n        } catch (error) {\n          const tokens = await this.tokenProvider.details(log.address);\n\n          token = {\n            ...tokens[log.address],\n            address: log.address,\n            chainId: this.client.getChainId(),\n          };\n\n          await this.tokenStorage.save(token);\n        }\n\n        txsummary[log.transactionHash].push({\n          tokenAddress: log.address,\n          amount: new BigNumber(log.data).toString(),\n          from: log.topics[1],\n          to: log.topics[2],\n        });\n      }\n\n      const txs = await Promise.all(\n        Array.from(Object.keys(txsummary)).map(async (hash) => {\n          const txData = await this.client.getTransaction(hash);\n          return txData;\n        }),\n      );\n\n      const transactions: Transaction[] = [];\n      for (const tx of txs) {\n        if (!tx || !tx.hash) {\n          continue;\n        }\n\n        transactions.push({\n          hash: tx.hash,\n          block: tx.blockNumber ?? 0,\n          to: tx.to ?? \"\",\n          success: TransactionStatus.NotDefined,\n          date: new Date((tx.blockNumber ?? 0) * 1000),\n          method: this.getMethodId(tx.data),\n          protocol: \"\", // TODO\n          transfers: txsummary[tx.hash].map((transfer) => ({\n            tokenAddress: transfer.tokenAddress,\n            amount: transfer.amount,\n            from: transfer.from,\n            to: transfer.to,\n          })),\n        });\n      }\n\n      // Save transaction to storage\n      await this.transactionStorage.saveMultiple(\n        txs\n          .map<Transaction | undefined>((tx) => {\n            if (!tx || !tx.hash) {\n              return undefined;\n            }\n\n            return {\n              hash: tx.hash,\n              block: tx.blockNumber ?? 0,\n              to: tx.to ?? \"\",\n              success: TransactionStatus.NotDefined,\n              date: new Date((tx.blockNumber ?? 0) * 1000),\n              method: this.getMethodId(tx.data),\n              protocol: \"\", // TODO\n              transfers: txsummary[tx.hash].map((transfer) => ({\n                tokenAddress: transfer.tokenAddress,\n                amount: transfer.amount,\n                from: transfer.from,\n                to: transfer.to,\n              })),\n            };\n          })\n          .filter((tx) => typeof tx !== \"undefined\"),\n      );\n    }\n  }\n}\n","import { MiniKit } from \"@worldcoin/minikit-js\";\nimport BigNumber from \"bignumber.js\";\nimport { DEX_ABI } from \"../abi/dex\";\nimport { TokenProvider } from \"../token\";\n\n/**\n * @typedef SendNativeParams\n * @property {number} amount - The amount of native cryptocurrency (e.g., ETH) to send.\n *                             This value is typically specified in the base unit (e.g., Ether).\n * @property {string} to - The recipient's address to which the native cryptocurrency will be sent.\n *                         This should be a valid Ethereum address.\n */\nexport type SendNativeParams = {\n  amount: number;\n  to: string;\n};\n\n/**\n * @typedef SendERC20Params\n * @property {number} amount - The amount of ERC20 tokens to send.\n *                             This value is typically specified in the token's base unit (e.g., smallest divisible unit like wei for ETH-based tokens).\n * @property {string} token - The contract address of the ERC20 token to be sent.\n *                            This should be a valid Ethereum address representing the token contract.\n * @property {string} to - The recipient's address to which the ERC20 tokens will be sent.\n *                         This should be a valid Ethereum address.\n */\nexport type SendERC20Params = {\n  amount: number;\n  token: string;\n  to: string;\n};\n\nexport class Sender {\n  // Holdstation forwarder address, using for gas free transactions\n  private readonly spender: string = \"0x43222f934ea5c593a060a6d46772fdbdc2e2cff0\";\n\n  private readonly tokenProvider: TokenProvider;\n\n  constructor(tokenProvider?: TokenProvider) {\n    this.tokenProvider = tokenProvider ?? new TokenProvider();\n  }\n\n  /**\n   * Sends native cryptocurrency (e.g., ETH) to a specified address.\n   * @private\n   * @param {SendNativeParams} params - Parameters for sending native cryptocurrency.\n   * @returns {Promise<any>} - Transaction payload.\n   */\n  private async native({ amount, to }: SendNativeParams) {\n    const value = `0x${new BigNumber(amount).multipliedBy(1e18).toString(16)}`;\n    // submit transaction\n    const payload = await MiniKit.commandsAsync.sendTransaction({\n      transaction: [\n        {\n          address: this.spender,\n          abi: DEX_ABI,\n          functionName: \"send\",\n          args: [to],\n          value,\n        },\n      ],\n    });\n\n    return payload;\n  }\n\n  /**\n   * Sends ERC20 tokens to a specified address.\n   * @param {SendERC20Params} params - Parameters for sending ERC20 tokens.\n   * @returns {Promise<any>} - Transaction payload.\n   */\n  private async erc20({ amount, token, to }: SendERC20Params) {\n    const tokenDetails = await this.tokenProvider.details(token);\n    const decimals = tokenDetails[token].decimals;\n    const amountIn = new BigNumber(amount).multipliedBy(10 ** decimals).toFixed();\n    const deadline = Math.floor((Date.now() + 30 * 60 * 1000) / 1000).toString();\n\n    // Define the permit transfer object, which includes the token address, amount, nonce, and deadline.\n    // This is used to structure the permit transfer data.\n    const permitTransfer = {\n      permitted: {\n        token,\n        amount: amountIn,\n      },\n      nonce: Date.now().toString(),\n      deadline,\n    };\n\n    // Format the permit transfer arguments into an array for use in the transaction.\n    const permitTransferArgsForm = [\n      [permitTransfer.permitted.token, permitTransfer.permitted.amount],\n      permitTransfer.nonce,\n      permitTransfer.deadline,\n    ];\n\n    // Define the transfer details object, which includes the spender and the requested amount.\n    // This is used to structure the transfer data.\n    const transferDetails = {\n      spender: this.spender,\n      requestedAmount: amountIn,\n    };\n\n    const transferDetailsArgsForm = [transferDetails.spender, transferDetails.requestedAmount];\n\n    // Define the data object that contains the transaction details and permit information.\n    // This is used to structure the entire transaction payload.\n    const data = {\n      transaction: [\n        {\n          address: this.spender,\n          abi: DEX_ABI,\n          functionName: \"transfer\",\n          args: [permitTransferArgsForm, transferDetailsArgsForm, to, \"PERMIT2_SIGNATURE_PLACEHOLDER_0\"],\n        },\n      ],\n      permit2: [\n        {\n          ...permitTransfer,\n          spender: this.spender,\n        },\n      ],\n    };\n\n    // submit transaction\n    const payload = await MiniKit.commandsAsync.sendTransaction(data);\n\n    return payload;\n  }\n\n  async send(params: SendNativeParams | SendERC20Params) {\n    if (\"token\" in params) {\n      return this.erc20(params);\n    }\n\n    return this.native(params);\n  }\n}\n","import BigNumber from \"bignumber.js\";\n\nexport function isStableCoin(address: string, stableCoins: string[]) {\n  return stableCoins.find((v) => v.toLowerCase() === address.toLowerCase()) !== undefined;\n}\n\nexport function isNativeToken(address: string) {\n  if (\n    address === \"0x0000000000000000000000000000000000000000\" ||\n    address.toLowerCase() === \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\"\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Determines the fee type (in or out) based on token types.\n * @param tokenIn - The input token address.\n * @param tokenOut - The output token address.\n */\nexport function getFeeDirect(tokenIn: string, tokenOut: string, stableCoins: string[], priotizeAddress?: string) {\n  if (isNativeToken(tokenIn)) {\n    return 0;\n  }\n\n  if (isNativeToken(tokenOut)) {\n    return 0;\n  }\n\n  if (isStableCoin(tokenIn, stableCoins)) {\n    return 0;\n  }\n\n  if (isStableCoin(tokenOut, stableCoins)) {\n    return 1;\n  }\n\n  if (!priotizeAddress) {\n    return 0;\n  }\n\n  if (tokenOut.toLowerCase() === priotizeAddress.toLowerCase()) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * Calculates the fee for a given input amount.\n * @param tokenOut - The output token address.\n * @param amountIn - The input amount in Wei.\n * @param fee - The fee percentage.\n */\nexport function getFeeWithAmountIn(tokenOut: string, amountIn: BigNumber, fee: number) {\n  if (isNativeToken(tokenOut)) {\n    return {\n      feePercent: `0x${new BigNumber(fee / 100).multipliedBy(Math.pow(10, 18)).toString(16)}`,\n    };\n  }\n\n  return {\n    feeAmount: `0x${amountIn\n      .multipliedBy(fee / 100)\n      .integerValue(BigNumber.ROUND_FLOOR)\n      .toString(16)}`,\n    feeToken: 0,\n  };\n}\n\n/**\n * Calculates the fee for a given output amount.\n * @param amountOut - The output amount in Wei.\n * @param fee - The fee percentage.\n */\nexport function getFeeWithAmountOut(amountOut: string, fee: number) {\n  return {\n    feeAmount: `0x${new BigNumber(amountOut)\n      .multipliedBy(fee / 100)\n      .integerValue(BigNumber.ROUND_FLOOR)\n      .toString(16)}`,\n    feeToken: 1,\n  };\n}\n","import { Token, TokenStorage } from \"..\";\n\nexport const defaultWorldchainConfig: SwapConfig = {\n  tokens: {\n    weth: {\n      address: \"0x4200000000000000000000000000000000000006\",\n      symbol: \"WETH\",\n      decimals: 18,\n      name: \"Wrapped Ether\",\n      chainId: 480,\n    },\n    wld: {\n      address: \"0x2cFc85d8E48F8EAB294be644d9E25C3030863003\",\n      symbol: \"WLD\",\n      decimals: 18,\n      name: \"Worldcoin\",\n      chainId: 480,\n    },\n    eth: {\n      address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n      symbol: \"ETH\",\n      decimals: 18,\n      name: \"Ether\",\n      chainId: 480,\n    },\n  },\n\n  uniswap: {\n    router: {\n      v2: \"0x541aB7c31A119441eF3575F6973277DE0eF460bd\",\n      v3: \"0x091AD9e2e6e5eD44c1c66dB50e49A601F9f36cF6\",\n    },\n    quoter: {\n      v2: \"0x10158D43e6cc414deE1Bd1eB0EfC6a5cBCfF244c\",\n    },\n  },\n\n  spender: \"0x43222f934ea5c593a060a6d46772fdbdc2e2cff0\",\n  stableCoins: [\"0x79A02482A880bCE3F13e09Da970dC34db4CD24d1\"],\n  tradeSurplusRecipient: \"0x8d61d7fe817efc69a2169f0d5f39b41ed5c89409\",\n};\n\nexport type SwapParams = {\n  quoteInput: {\n    tokenIn: string;\n    tokenOut: string;\n    amountIn: string;\n    slippage?: string;\n    fee?: string;\n    feeReceiver?: string;\n    preferRouters?: string[];\n    timeout?: number;\n  };\n  quoteOutput: {\n    data: string;\n    to: string;\n    value?: string;\n    addons?: {\n      /**\n       * The estimated output token amount after the swap.\n       */\n      outAmount: string;\n\n      /**\n       * The swap rate between the input and output tokens.\n       */\n      rateSwap: string;\n\n      /**\n       * The output token amount in USD.\n       */\n      amountOutUsd: string;\n\n      /**\n       * The minimum output amount after considering slippage and fees.\n       */\n      minReceived: string;\n\n      /**\n       * The fee amount deducted from the output in hexadecimal format.\n       */\n      feeAmountOut: string;\n    };\n  };\n  input: {\n    tokenIn: string;\n    tokenOut: string;\n    amountIn: string;\n    tx: {\n      data: string;\n      to: string;\n      value?: string;\n    };\n    feeAmountOut?: string;\n    fee?: string;\n    feeReceiver?: string;\n    partnerCode?: string;\n  };\n  output: {\n    success: boolean;\n    errorCode?: string;\n    transactionId?: string;\n  };\n};\n\nexport type SwapConfig = {\n  tokens: {\n    weth: Token;\n    wld: Token;\n    eth: Token;\n  };\n\n  uniswap: {\n    router: {\n      v2: string;\n      v3: string;\n    };\n    quoter: {\n      v2: string;\n    };\n  };\n\n  stableCoins: string[];\n\n  spender: string;\n\n  tokenStorage?: TokenStorage;\n\n  tradeSurplusRecipient?: string;\n};\n\nexport interface Estimator {\n  quote(input: SwapParams[\"quoteInput\"]): Promise<SwapParams[\"quoteOutput\"]>;\n}\n\nexport interface Swapper {\n  swap(input: SwapParams[\"input\"]): Promise<SwapParams[\"output\"]>;\n  estimate: Estimator;\n  load(swapModule: SwapModule): Promise<void>;\n}\n\nexport interface SwapModule {\n  estimate: Estimator[\"quote\"];\n  name(): string;\n  enabled(chainId: number): boolean;\n}\n","import BigNumber from \"bignumber.js\";\nimport { Token, TokenStorage } from \"../storage\";\nimport { TokenProvider } from \"../token\";\nimport { getFeeDirect, getFeeWithAmountIn, getFeeWithAmountOut, isNativeToken } from \"./fee\";\nimport { HoldSoSwapRequestParams, HoldSoSwapResponse } from \"./hold-so.types\";\nimport { defaultWorldchainConfig, SwapConfig, SwapModule, SwapParams } from \"./swap\";\n\nconst ROUTER_HOLD_SO = \"0x0281c83C8F53314DFF3ebE24A90ee2412A2aA970\";\n\nexport class HoldSo implements SwapModule {\n  private config: SwapConfig = defaultWorldchainConfig;\n\n  constructor(\n    private readonly tokenProvider: TokenProvider,\n    private readonly tokenStorage: TokenStorage,\n\n    config?: Partial<SwapConfig>,\n  ) {\n    this.config = Object.assign(this.config, config ?? {});\n  }\n\n  name(): string {\n    return \"hold-so\";\n  }\n\n  enabled(chainId: number): boolean {\n    return chainId === 480;\n  }\n\n  private async holdSoSwapRequest(data: HoldSoSwapRequestParams): Promise<HoldSoSwapResponse> {\n    // Build query parameters string\n    const url = `https://api.worldswap.org/worldchain/api/swap`;\n\n    const queryParams = new URLSearchParams();\n\n    // Add all parameters from the data object\n    Object.entries(data).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        queryParams.append(key, value.toString());\n      }\n    });\n\n    const response = await fetch(`${url}?${queryParams.toString()}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (response.status < 200 || response.status >= 400) {\n      throw new Error(`${response.status}`);\n    }\n\n    const result = await response.json();\n    // Parse and return the JSON response\n    return result as HoldSoSwapResponse;\n  }\n\n  async estimate(params: SwapParams[\"quoteInput\"]): Promise<SwapParams[\"quoteOutput\"]> {\n    const { tokenIn: fromToken, tokenOut: toToken, fee: rawFee = \"0.2\", slippage: rawSlippage = \"3\" } = params;\n    const amount = new BigNumber(params.amountIn);\n\n    // Retrieve token details for input and output tokens\n    const tokenIn = await this.findToken(fromToken);\n    const tokenOut = await this.findToken(toToken);\n\n    // Convert the input amount to Wei\n    let amountInWei = new BigNumber(amount).multipliedBy(10 ** tokenIn.decimals || 18);\n\n    const fee = parseFloat(rawFee);\n    if (isNaN(fee)) {\n      throw new Error(`Invalid fee value: ${rawFee}`);\n    }\n\n    //Adjust the input amount if a fee is applicable\n    if (\n      getFeeDirect(tokenIn.address, tokenOut.address, this.config.stableCoins, this.config.tokens.wld.address) === 0\n    ) {\n      amountInWei = amountInWei.minus(getFeeWithAmountIn(tokenOut.address, amountInWei, fee)?.feeAmount ?? 0);\n    }\n\n    const slippage = parseFloat(rawSlippage);\n    // Validate slippage to ensure it is within a safe range (0% to 100%)\n    if (isNaN(slippage) || slippage < 0 || slippage > 100) {\n      throw new Error(\"Invalid slippage value. It must be between 0 and 100.\");\n    }\n\n    // Fetch the best rate for the swapFetch the best rate for the swap\n    const data = await this.holdSoSwapRequest({\n      src: tokenIn.address,\n      dst: tokenOut.address,\n      amount: new BigNumber(amountInWei).toFixed(0),\n      receiver: this.config.spender,\n      slippage: slippage / 100,\n    });\n\n    const amountOut = new BigNumber(data.quote.toAmount);\n\n    let feeOut = new BigNumber(0);\n    if (\n      getFeeDirect(tokenIn.address, tokenOut.address, this.config.stableCoins, this.config.tokens.wld.address) === 1\n    ) {\n      feeOut = new BigNumber(getFeeWithAmountOut(`0x${amountOut.toString(16)}`, fee)?.feeAmount ?? \"0\");\n    }\n\n    // Calculate the minimum output amount after slippage and fees\n    const amountOutMin = amountOut\n      .multipliedBy(new BigNumber(1).minus(Number(slippage) / 10000))\n      .integerValue(BigNumber.ROUND_DOWN)\n      .minus(feeOut);\n\n    // rateSwap = amountIn / (amountOut / 10^decimals)\n    const rateSwap = amount //\n      .dividedBy(amountOut)\n      .multipliedBy(10 ** tokenOut.decimals);\n\n    const minmumReceived = amountOutMin.div(Math.pow(10, tokenOut.decimals));\n\n    // amountUsd = tokenAmount / 10^decimals * rateUsdPerToken\n    const amountOutUsd = new BigNumber(data.quote.toAmountUsd);\n\n    // Return the response with calculated values and populated transaction\n    const resp: SwapParams[\"quoteOutput\"] = {\n      data: data.tx.data ?? \"\",\n      value: isNativeToken(tokenIn.address) ? amountInWei.toFixed() : \"0\",\n      to: ROUTER_HOLD_SO,\n      addons: {\n        outAmount: amountOut.div(10 ** tokenOut.decimals).toString(),\n        rateSwap: rateSwap.toString(),\n        amountOutUsd: amountOutUsd.toString(),\n        minReceived: minmumReceived.toString(),\n        feeAmountOut: `0x${feeOut.toString(16)}`,\n      },\n    };\n\n    return resp;\n  }\n\n  private async findToken(tokenAddress: string) {\n    let token: Token;\n    if (isNativeToken(tokenAddress)) {\n      return this.config.tokens.eth;\n    }\n\n    try {\n      token = await this.tokenStorage.findByAddress(tokenAddress);\n    } catch (error) {\n      const tokens = await this.tokenProvider.details(tokenAddress);\n\n      token = {\n        ...tokens[tokenAddress],\n        address: tokenAddress,\n      };\n      await this.tokenStorage.save(token);\n    }\n\n    return token;\n  }\n}\n","import { logger } from \"../logger\";\n\n// Global variable to store partner code in memory\nlet partnerCode: string | null = null;\n\n// Define a type for the storage interface\ninterface StorageInterface {\n  getItem(key: string): string | null;\n  setItem(key: string, value: string): void;\n  removeItem(key: string): void;\n}\n\n// Storage key constant\nconst PARTNER_CODE_KEY = \"code.pnrtnr\";\n\n/**\n * Safely check if we're in an environment with localStorage\n * This approach avoids direct window references that cause TypeScript errors\n * @returns The storage object if available, otherwise null\n */\nconst getStorage = (): StorageInterface | null => {\n  try {\n    const getLocalStorageObj = new Function('return typeof localStorage !== \"undefined\" ? localStorage : null');\n    const storageObj = getLocalStorageObj();\n\n    if (\n      storageObj &&\n      typeof storageObj.getItem === \"function\" &&\n      typeof storageObj.setItem === \"function\" &&\n      typeof storageObj.removeItem === \"function\"\n    ) {\n      return storageObj;\n    }\n  } catch (e) {\n    // Access might be blocked or we're in a non-browser environment\n    logger.debug(\"Storage is not accessible:\", e);\n  }\n  return null;\n};\n\n/**\n * Sets the partner code for tracking purposes\n * @param {string} code - The partner code to set\n * @returns {boolean} True if the code was successfully set\n */\nexport const setPartnerCode = (code: string): boolean => {\n  if (!code || typeof code !== \"string\") {\n    logger.error(\"Invalid partner code:\", code);\n    return false;\n  }\n\n  // Save to memory\n  partnerCode = code;\n  logger.debug(\"Partner code set:\", code);\n\n  // Try to persist to storage if available\n  try {\n    const storage = getStorage();\n    if (storage) {\n      storage.setItem(PARTNER_CODE_KEY, code);\n      logger.debug(\"Partner code also saved to persistent storage\");\n    }\n  } catch (e) {\n    // Silently fail - persistent storage is optional\n    logger.debug(\"Could not save to persistent storage:\", e);\n  }\n\n  return true;\n};\n\n/**\n * Gets the current partner code\n * @returns {string|null} The partner code or null if not set\n */\nexport const getPartnerCode = (): string | null => {\n  // Return from memory if available\n  if (partnerCode) {\n    return partnerCode;\n  }\n\n  // Try to get from persistent storage if available\n  try {\n    const storage = getStorage();\n    if (storage) {\n      const storedCode = storage.getItem(PARTNER_CODE_KEY);\n      if (storedCode) {\n        // Update memory cache\n        partnerCode = storedCode;\n        logger.debug(\"Partner code retrieved from persistent storage:\", storedCode);\n        return storedCode;\n      }\n    }\n  } catch (e) {\n    // Silently fail - persistent storage is optional\n    logger.debug(\"Could not read from persistent storage:\", e);\n  }\n\n  return null;\n};\n\n/**\n * Clears the partner code from memory and persistent storage if available\n * @returns {boolean} True if the code was successfully cleared\n */\nexport const clearPartnerCode = (): boolean => {\n  partnerCode = null;\n\n  // Try to remove from persistent storage if available\n  try {\n    const storage = getStorage();\n    if (storage) {\n      storage.removeItem(PARTNER_CODE_KEY);\n      logger.debug(\"Partner code removed from persistent storage\");\n    }\n  } catch (e) {\n    // Silently fail - persistent storage is optional\n    logger.debug(\"Could not remove from persistent storage:\", e);\n  }\n\n  return true;\n};\n\n// Variable to track if interval is already running\nlet partnerCodeCheckIntervalId: number | null = null;\n\n/**\n * Initialize a check that periodically warns if partner code is not set\n * Called automatically when this module is imported\n */\nexport const initPartnerCodeCheck = (): void => {\n  // Don't set interval if already running\n  if (partnerCodeCheckIntervalId) {\n    return;\n  }\n\n  try {\n    // Use Function constructor to safely check for setInterval in any environment\n    const setIntervalSafe = new Function('return typeof setInterval === \"function\" ? setInterval : null')();\n\n    if (setIntervalSafe) {\n      partnerCodeCheckIntervalId = setIntervalSafe(() => {\n        if (!getPartnerCode()) {\n          // Display a warning message about missing partner code\n          logger.warn(\"⚠️ Partner code is not set. Please call setPartnerCode()\");\n        }\n      }, 5000);\n\n      logger.debug(\"Partner code check initialized\");\n    }\n  } catch (e) {\n    logger.debug(\"Could not initialize partner code check:\", e);\n  }\n};\n\n// Automatically start the check when this module is loaded\ninitPartnerCodeCheck();\n","import { MiniKit } from \"@worldcoin/minikit-js\";\nimport { BigNumber } from \"bignumber.js\";\nimport { abi, getFeeDirect, getFeeWithAmountIn, isNativeToken, logger } from \"..\";\nimport { Client } from \"../client\";\nimport { IdbTokenStorage, Token, TokenStorage } from \"../storage\";\nimport { TokenProvider } from \"../token\";\nimport { getPartnerCode } from \"./partner\";\nimport { defaultWorldchainConfig, Estimator, SwapConfig, SwapModule, SwapParams, Swapper } from \"./swap\";\n\nexport class SwapHelper implements Swapper {\n  private modules: Record<string, SwapModule> = {};\n  private readonly tokenProvider: TokenProvider;\n  private tokenStorage: TokenStorage;\n  estimate: Estimator;\n\n  // WORLDCHAIN\n  private config: SwapConfig = defaultWorldchainConfig;\n\n  constructor(\n    private readonly client: Client,\n    config?: Partial<SwapConfig>,\n  ) {\n    this.estimate = {\n      quote: this._quote.bind(this),\n    };\n\n    this.tokenProvider = new TokenProvider({ client });\n    this.tokenStorage = config?.tokenStorage ?? new IdbTokenStorage(\"TokenDB\");\n    this.config = Object.assign(this.config, config ?? {});\n  }\n\n  /**\n   * Loads the necessary dependencies for the SwapHelper.\n   * @param swapModule - The swap module containing dependencies to initialize.\n   */\n  async load(swapModule: SwapModule): Promise<void> {\n    this.modules[swapModule.name()] = swapModule;\n  }\n\n  private async _quote(params: SwapParams[\"quoteInput\"]): Promise<SwapParams[\"quoteOutput\"]> {\n    const { timeout = 30_000, preferRouters = [\"hold-so\", \"0x\"] } = params;\n    const chainId = this.client.getChainId();\n\n    // Use the default preferRouters from params, which is already set to [\"holds-so\", \"0x\"] if not provided\n    const routersToUse = preferRouters;\n    if (routersToUse.length === 0) {\n      throw new Error(\"No router available\");\n    }\n\n    const validModules = routersToUse\n      .map((router) => this.modules[router])\n      .filter((swapper) => swapper && swapper.enabled(chainId));\n\n    if (validModules.length === 0) {\n      throw new Error(\"No valid router available\");\n    }\n\n    const startTime = Date.now();\n    const errors: Array<{ router: string; error: unknown }> = [];\n\n    // Try each router sequentially until one succeeds\n    for (const swapper of validModules) {\n      // Check if we've exceeded the timeout\n      const elapsed = Date.now() - startTime;\n      if (elapsed >= timeout) {\n        throw new Error(`Timeout after ${timeout}ms`);\n      }\n\n      try {\n        const result = await swapper.estimate(params);\n        if (result) {\n          return result;\n        }\n      } catch (error) {\n        logger.error(`Error estimating swap for router ${swapper.name()}:`, error);\n        errors.push({ router: swapper.name(), error });\n      }\n    }\n\n    // If we reach here, all routers failed\n    const errorMessages = errors\n      .map((e) => `${e.router}: ${e.error instanceof Error ? e.error.message : e.error}`)\n      .join(\"; \");\n    throw new Error(`All routers failed. Errors: ${errorMessages}`);\n  }\n\n  async swap(params: SwapParams[\"input\"]): Promise<SwapParams[\"output\"]> {\n    if (isNativeToken(params.tokenIn)) {\n      return await this.submitSwapETHForTokens(params);\n    }\n\n    if (isNativeToken(params.tokenOut)) {\n      return await this.submitSwapTokensForETH(params);\n    }\n\n    return await this.submitSwapTokensForTokens(params);\n  }\n\n  private async submitSwapTokensForTokens(params: SwapParams[\"input\"]): Promise<SwapParams[\"output\"]> {\n    const {\n      tokenIn,\n      tokenOut,\n      amountIn,\n      fee = \"0.2\",\n      feeReceiver = \"0x0000000000000000000000000000000000000000\",\n      feeAmountOut,\n      partnerCode,\n    } = params;\n    const { data, to } = params.tx;\n    const fromToken = await this.findToken(tokenIn);\n\n    const sellAmount = new BigNumber(amountIn).multipliedBy(Math.pow(10, fromToken.decimals)).toFixed();\n    const deadline = Math.floor((Date.now() + 5 * 60 * 1000) / 1000).toString();\n\n    const permitTransfer = {\n      permitted: {\n        token: tokenIn,\n        amount: sellAmount,\n      },\n      nonce: Date.now().toString(),\n      deadline,\n    };\n\n    let feeToken = \"0\";\n    let feeAmount = \"0\";\n    if (getFeeDirect(tokenIn, tokenOut, this.config.stableCoins, this.config.tokens.wld.address) === 0) {\n      feeAmount = getFeeWithAmountIn(tokenOut, new BigNumber(sellAmount), Number(fee))?.feeAmount ?? \"0\";\n      feeToken = \"0\";\n    } else {\n      feeAmount = feeAmountOut ?? \"0\";\n      feeToken = \"1\";\n    }\n\n    const partnerData = this.packPartnerData(partnerCode ?? getPartnerCode() ?? \"0\", feeAmount);\n\n    const rawData = {\n      transaction: [\n        {\n          address: this.config.spender,\n          abi: abi.DEX_ABI,\n          functionName: \"fillQuoteTokenToToken\",\n          args: [\n            tokenIn,\n            tokenOut,\n            to,\n            data,\n            sellAmount,\n            feeToken,\n            partnerData,\n            feeReceiver,\n            [permitTransfer.nonce, permitTransfer.deadline, \"PERMIT2_SIGNATURE_PLACEHOLDER_0\"],\n          ],\n          value: \"0x0\",\n        },\n      ],\n      permit2: [\n        {\n          ...permitTransfer,\n          spender: this.config.spender,\n        },\n      ],\n    };\n    logger.log(\"fillQuoteTokenToToken: \", rawData);\n\n    const payload = await MiniKit.commandsAsync.sendTransaction(rawData);\n    if (payload.finalPayload.status !== \"success\") {\n      return {\n        success: false,\n        errorCode: payload.finalPayload.error_code,\n      };\n    }\n\n    return {\n      success: true,\n      transactionId: payload.finalPayload.transaction_id,\n    };\n  }\n\n  private async submitSwapETHForTokens(params: SwapParams[\"input\"]): Promise<SwapParams[\"output\"]> {\n    const {\n      tokenIn,\n      tokenOut,\n      amountIn,\n      fee = \"0.2\",\n      feeReceiver = \"0x0000000000000000000000000000000000000000\",\n      partnerCode,\n    } = params;\n    const { data, to } = params.tx;\n    const fromToken = await this.findToken(tokenIn);\n    const amountInWei = `0x${new BigNumber(amountIn).multipliedBy(Math.pow(10, fromToken.decimals)).toString(16)}`;\n\n    const feeAmount = getFeeWithAmountIn(tokenOut, new BigNumber(amountInWei), Number(fee))?.feeAmount ?? \"0\";\n\n    const partnerData = this.packPartnerData(partnerCode ?? getPartnerCode() ?? \"0\", feeAmount);\n\n    const rawData = {\n      transaction: [\n        {\n          address: this.config.spender,\n          abi: abi.DEX_ABI,\n          functionName: \"fillQuoteEthToToken\",\n          args: [tokenOut, to, data, partnerData, feeReceiver],\n          value: amountInWei,\n        },\n      ],\n    };\n\n    logger.log(\"fillQuoteEthToToken: \", rawData);\n    const payload = await MiniKit.commandsAsync.sendTransaction(rawData);\n\n    if (payload.finalPayload.status !== \"success\") {\n      return {\n        success: false,\n        errorCode: payload.finalPayload.error_code,\n      };\n    }\n\n    return {\n      success: true,\n      transactionId: payload.finalPayload.transaction_id,\n    };\n  }\n\n  private async submitSwapTokensForETH(params: SwapParams[\"input\"]): Promise<SwapParams[\"output\"]> {\n    const {\n      tokenIn,\n      tokenOut,\n      amountIn,\n      fee = \"0.2\",\n      feeReceiver = \"0x0000000000000000000000000000000000000000\",\n      partnerCode,\n    } = params;\n    const { data, to } = params.tx;\n    const fromToken = await this.findToken(tokenIn);\n\n    const sellAmount = new BigNumber(amountIn).multipliedBy(Math.pow(10, fromToken.decimals)).toFixed();\n    const deadline = Math.floor((Date.now() + 5 * 60 * 1000) / 1000).toString();\n    const feePercent = getFeeWithAmountIn(tokenOut, new BigNumber(sellAmount), Number(fee))?.feePercent ?? \"0\";\n    const permitTransfer = {\n      permitted: {\n        token: tokenIn,\n        amount: sellAmount,\n      },\n      nonce: Date.now().toString(),\n      deadline,\n    };\n\n    const partnerData = this.packPartnerData(partnerCode ?? getPartnerCode() ?? \"0\", feePercent);\n\n    const rawData = {\n      transaction: [\n        {\n          address: this.config.spender,\n          abi: abi.DEX_ABI,\n          functionName: \"fillQuoteTokenToEth\",\n          args: [\n            tokenIn,\n            to,\n            data,\n            sellAmount,\n            partnerData,\n            feeReceiver,\n            [permitTransfer.nonce, permitTransfer.deadline, \"PERMIT2_SIGNATURE_PLACEHOLDER_0\"],\n          ],\n          value: \"0x0\",\n        },\n      ],\n      permit2: [\n        {\n          ...permitTransfer,\n          spender: this.config.spender,\n        },\n      ],\n    };\n    logger.log(\"fillQuoteTokenToEth: \", rawData);\n\n    const payload = await MiniKit.commandsAsync.sendTransaction(rawData);\n\n    if (payload.finalPayload.status !== \"success\") {\n      return {\n        success: false,\n        errorCode: payload.finalPayload.error_code,\n      };\n    }\n\n    return {\n      success: true,\n      transactionId: payload.finalPayload.transaction_id,\n    };\n  }\n\n  /**\n   * Finds token details by its address, either from storage or by fetching from the provider.\n   * @param tokenAddress - The address of the token.\n   */\n  private async findToken(tokenAddress: string) {\n    let token: Token;\n    if (isNativeToken(tokenAddress)) {\n      return this.config.tokens.eth;\n    }\n\n    try {\n      token = await this.tokenStorage.findByAddress(tokenAddress);\n    } catch (error) {\n      const tokens = await this.tokenProvider.details(tokenAddress);\n\n      token = {\n        ...tokens[tokenAddress],\n        address: tokenAddress,\n      };\n      await this.tokenStorage.save(token);\n    }\n\n    return token;\n  }\n\n  private packPartnerData(partnerCode: string, fee: string): string {\n    // Convert to JavaScript BigInts for bitwise operation\n    const partnerCodeBigInt = BigInt(partnerCode);\n    const feeBigInt = BigInt(fee);\n\n    // Shift partner code left by 240 bits\n    const shiftedPartnerCode = partnerCodeBigInt << 240n;\n\n    // Perform bitwise OR\n    const result = shiftedPartnerCode | feeBigInt;\n\n    // Convert back to BigNumber\n    return new BigNumber(result).toFixed();\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport { Token, TokenStorage } from \"../storage\";\nimport { TokenProvider } from \"../token\";\nimport { getFeeDirect, getFeeWithAmountIn, getFeeWithAmountOut, isNativeToken } from \"./fee\";\nimport { defaultWorldchainConfig, SwapConfig, SwapModule, SwapParams } from \"./swap\";\nimport { ZeroXRequestParams, ZeroXResponse } from \"./zero-x.types\";\n\nexport class ZeroX implements SwapModule {\n  private config: SwapConfig = defaultWorldchainConfig;\n\n  constructor(\n    private readonly tokenProvider: TokenProvider,\n    private readonly tokenStorage: TokenStorage,\n\n    config?: Partial<SwapConfig>,\n  ) {\n    this.config = Object.assign(this.config, config ?? {});\n  }\n\n  name(): string {\n    return \"0x\";\n  }\n\n  enabled(chainId: number): boolean {\n    return chainId === 480;\n  }\n\n  private async zeroXRequest(data: ZeroXRequestParams): Promise<ZeroXResponse> {\n    // Build query parameters string\n    const url = `https://bridge.holdstation.com/0x/swap/allowance-holder/quote`;\n\n    const queryParams = new URLSearchParams();\n\n    // Add all parameters from the data object\n    Object.entries(data).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        queryParams.append(key, value.toString());\n      }\n    });\n\n    // Make the fetch request\n    const response = await fetch(`${url}?${queryParams.toString()}`, {\n      method: \"GET\",\n      headers: {\n        \"X-Bridge-Purpose\": \"worldchain-app\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (response.status < 200 || response.status >= 400) {\n      throw new Error(`${response.status}`);\n    }\n\n    const result = await response.json();\n    // Parse and return the JSON response\n    return result as ZeroXResponse;\n  }\n\n  private async tokenRateUsd(token: Token): Promise<number> {\n    if (token.address === this.config.stableCoins[0]) {\n      return 1;\n    }\n\n    // Build query parameters string\n    const data = await this.zeroXRequest({\n      chainId: 480,\n      sellToken: token.address,\n      buyToken: this.config.stableCoins[0],\n      sellAmount: new BigNumber(1).multipliedBy(10 ** token.decimals).toFixed(0),\n      taker: this.config.spender,\n      slippageBps: 0,\n    });\n    // Parse and return the JSON response\n    return new BigNumber(data.buyAmount).dividedBy(10 ** 6).toNumber(); // usdc decimals\n  }\n\n  async estimate(params: SwapParams[\"quoteInput\"]): Promise<SwapParams[\"quoteOutput\"]> {\n    const { tokenIn: fromToken, tokenOut: toToken, fee: rawFee = \"0.2\", slippage: rawSlippage = \"3\" } = params;\n    const amount = new BigNumber(params.amountIn);\n\n    // Retrieve token details for input and output tokens\n    const tokenIn = await this.findToken(fromToken);\n    const tokenOut = await this.findToken(toToken);\n\n    // Convert the input amount to Wei\n    let amountInWei = new BigNumber(amount).multipliedBy(10 ** tokenIn.decimals || 18);\n\n    const fee = parseFloat(rawFee);\n    if (isNaN(fee)) {\n      throw new Error(`Invalid fee value: ${rawFee}`);\n    }\n\n    //Adjust the input amount if a fee is applicable\n    if (\n      getFeeDirect(tokenIn.address, tokenOut.address, this.config.stableCoins, this.config.tokens.wld.address) === 0\n    ) {\n      amountInWei = amountInWei.minus(getFeeWithAmountIn(tokenOut.address, amountInWei, fee)?.feeAmount ?? 0);\n    }\n\n    const slippage = parseFloat(rawSlippage);\n    // Validate slippage to ensure it is within a safe range (0% to 100%)\n    if (isNaN(slippage) || slippage < 0 || slippage > 100) {\n      throw new Error(\"Invalid slippage value. It must be between 0 and 100.\");\n    }\n\n    // Fetch the best rate for the swapFetch the best rate for the swap\n    const data = await this.zeroXRequest({\n      chainId: 480,\n      sellToken: tokenIn.address,\n      buyToken: tokenOut.address,\n      sellAmount: new BigNumber(amountInWei).toFixed(0),\n      taker: this.config.spender,\n      slippageBps: slippage * 100, // 0 - > 1000 : 0% - > 10%\n      tradeSurplusRecipient: this.config.tradeSurplusRecipient,\n    });\n\n    const amountOut = new BigNumber(data.buyAmount);\n\n    let feeOut = new BigNumber(0);\n    if (\n      getFeeDirect(tokenIn.address, tokenOut.address, this.config.stableCoins, this.config.tokens.wld.address) === 1\n    ) {\n      feeOut = new BigNumber(getFeeWithAmountOut(`0x${amountOut.toString(16)}`, fee)?.feeAmount ?? \"0\");\n    }\n\n    // Calculate the minimum output amount after slippage and fees\n    const amountOutMin = amountOut\n      .multipliedBy(new BigNumber(1).minus(Number(slippage) / 10000))\n      .integerValue(BigNumber.ROUND_DOWN)\n      .minus(feeOut);\n\n    // rateSwap = amountIn / (amountOut / 10^decimals)\n    const rateSwap = amount //\n      .dividedBy(amountOut)\n      .multipliedBy(10 ** tokenOut.decimals);\n\n    const rateTokenOut = await this.tokenRateUsd(tokenOut);\n\n    const minmumReceived = amountOutMin.div(Math.pow(10, tokenOut.decimals));\n\n    // amountUsd = tokenAmount / 10^decimals * rateUsdPerToken\n    const amountOutUsd = new BigNumber(amountOut).div(10 ** tokenOut.decimals).multipliedBy(rateTokenOut);\n\n    // Return the response with calculated values and populated transaction\n    const resp: SwapParams[\"quoteOutput\"] = {\n      data: data.transaction.data ?? \"\",\n      value: isNativeToken(tokenIn.address) ? amountInWei.toFixed() : \"0\",\n      to: data.transaction.to ?? \"\",\n      addons: {\n        outAmount: amountOut.div(10 ** tokenOut.decimals).toString(),\n        rateSwap: rateSwap.toString(),\n        amountOutUsd: amountOutUsd.toString(),\n        minReceived: minmumReceived.toString(),\n        feeAmountOut: `0x${feeOut.toString(16)}`,\n      },\n    };\n\n    return resp;\n  }\n\n  private async findToken(tokenAddress: string) {\n    let token: Token;\n    if (isNativeToken(tokenAddress)) {\n      return this.config.tokens.eth;\n    }\n\n    try {\n      token = await this.tokenStorage.findByAddress(tokenAddress);\n    } catch (error) {\n      const tokens = await this.tokenProvider.details(tokenAddress);\n\n      token = {\n        ...tokens[tokenAddress],\n        address: tokenAddress,\n      };\n      await this.tokenStorage.save(token);\n    }\n\n    return token;\n  }\n}\n"]}